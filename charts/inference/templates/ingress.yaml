{{- if .Values.ingress.enabled -}}
{{- $fullName := include "inference.fullname" . -}}
{{- $ingressHost := include "inference.ingressHost" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "inference.labels" . | nindent 4 }}
  {{- if .Values.ingress.tls }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
  - hosts:
    - {{ $ingressHost | quote }}
    secretName: {{ $fullName }}-tls
  {{- end }}
  rules:
    - host: {{ $ingressHost | quote }}
      http:
        paths:
          {{- range $key, $value := .Values.ingress }}
          {{- if hasPrefix "path" $key }}
          {{- with $value }}
          - path: {{ .name }}
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ .port }}
          {{- end }}
          {{- end }}
          {{- end }}
{{- end }}
